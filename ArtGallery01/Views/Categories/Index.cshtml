@model IEnumerable<ArtGallery01.Models.Category>

@{
    ViewData["Title"] = "Categories";
}

<div class="container mt-4" style="background-color: white;">
    <div class="row mb-2">
        <div class="col-lg-10 text-end">
            <a asp-action="Create" class="btn btn-add-category">
                <i class="bi bi-plus-circle"></i>
            </a>
        </div>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <div id="success-message" class="alert alert-success" style="display:none;"></div>
            <div id="error-message" class="alert alert-danger" style="display:none;"></div>
            <div id="category-container" class="list-group">
                @foreach (var category in Model)
                {
                    <div class="list-group-item d-flex justify-content-between align-items-center category-item">
                        <div>
                            <input type="text" class="form-control d-inline-block w-50" value="@category.CategoryName" id="category-name-@category.Id" readonly />
                        </div>
                        <div>
                            <button class="btn btn-sm btn-danger" onclick="deleteCategory(@category.Id)">
                                <i class="bi bi-trash"></i>
                            </button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
    <script>
        function deleteCategory(categoryId) {
            if (confirm('Are you sure you want to delete this category?')) {
                const token = $('input[name="__RequestVerificationToken"]').val();

                fetch(`/Categories/Delete/${categoryId}`, {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': token
                    }
                })
                    .then(response => {
                        if (response.ok) {
                            return response.json();
                        }
                        throw new Error('Network response was not ok.');
                    })
                    .then(data => {
                        if (data.success) {
                            document.getElementById(`category-name-${categoryId}`).closest('.category-item').remove();
                            showSuccessMessage('Category deleted successfully.');
                        } else {
                            showErrorMessage(data.message);
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        showErrorMessage('Failed to delete category.');
                    });
            }

            return false; // Prevent form submission
        }

        function showSuccessMessage(message) {
            const successMessageEl = document.getElementById("success-message");
            successMessageEl.innerText = message;
            successMessageEl.style.display = "block";
            setTimeout(function () {
                successMessageEl.style.display = "none";
            }, 3000); // Hide the message after 3 seconds
        }

        function showErrorMessage(message) {
            const errorMessageEl = document.getElementById("error-message");
            errorMessageEl.innerText = message;
            errorMessageEl.style.display = "block";
            setTimeout(function () {
                errorMessageEl.style.display = "none";
            }, 5000); // Hide the message after 5 seconds
        }
    </script>
}

<style>
    body {
        font-family: 'Arial', sans-serif;
        background-color: white; /* Setăm fundalul întregii pagini la alb */
    }

    .container {
        background-color: transparent; /* Fundal alb pentru container */
        padding: 20px;
        border-radius: 8px;
        box-shadow: none; /* Eliminăm umbrele */
    }

    .category-item {
        background-color: white; /* Fundal alb pentru item */
        border: 1px solid #ddd;
        margin-bottom: 10px;
        padding: 15px;
        border-radius: 5px;
        transition: background-color 0.3s ease;
    }

        .category-item:hover {
            background-color: #f8f9fa; /* Culoare deschisă la hover */
        }

    .btn-burgundy {
        background-color: #800020;
        color: white;
        border: none;
        transition: background-color 0.3s ease;
    }

        .btn-burgundy:hover {
            background-color: #660018;
        }

        .btn-burgundy:focus,
        .btn-burgundy:active {
            background-color: #4d0012;
        }

    .btn-dark {
        background-color: #333333;
        color: white;
        border: none;
    }

        .btn-dark:hover {
            background-color: #1a1a1a;
        }

        .btn-dark:focus,
        .btn-dark:active {
            background-color: #000000;
        }

    .btn-add-category {
        background-color: #800020; /* Burgundy background */
        color: white; /* White text/icon color */
        border: 2px solid transparent; /* Prepare for hover border without shifting content */
        border-radius: 50%;
        width: 50px;
        height: 50px;
        font-size: 24px;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease, color 0.3s ease, border-color 0.3s ease; /* Include border-color in transition */
    }

        .btn-add-category:hover, .btn-add-category:focus {
            background-color: #fff; /* White background on hover/focus */
            color: #800020; /* Burgundy text/icon color on hover/focus */
            border-color: #660018; /* Darker burgundy border on hover/focus */
        }

        .btn-add-category:active {
            background-color: #4d0012; /* Even darker burgundy on active/click */
            color: #fff; /* Keep text/icon white when active */
            border-color: #660018; /* Maintain the darker border on active state */
        }


    .input-group-text {
        background-color: #800020;
        color: white;
    }

    .form-select {
        border-color: #800020;
    }

        .form-select:focus {
            border-color: #800020;
            box-shadow: 0 0 0 0.2rem rgba(128, 0, 32, 0.25);
        }

    .form-control:focus {
        border-color: #800020;
        box-shadow: 0 0 0 0.2rem rgba(128, 0, 32, 0.25);
    }

    .alert-success {
        color: white;
        background-color: #B03060;
        border-color: #B03060;
    }

    .alert-danger {
        color: white;
        background-color: #ff4d4d;
        border-color: #ff4d4d;
    }

    .mr-2 {
        margin-right: 10px;
    }
</style>
