@model IEnumerable<ArtGallery01.Models.Product>

<div class="container">
    <!-- Button for adding new products -->
    <a class="btn btn-add mb-3" asp-action="Create">
        <i class="bi bi-plus-circle"></i>
    </a>

    <!-- Authentication check -->
    @if (!User.Identity.IsAuthenticated)
    {
        <p>Please log in to view the product list.</p>
    }
    else
    {
        <!-- Search functionality -->
        <div class="input-group mb-3">
            <input type="text" id="searchInput" class="form-control" onkeyup="searchFunction()" placeholder="Search for names or tags.." title="Type in a name">
            <div class="input-group-append">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
            </div>
        </div>

        <!-- Grid for displaying products -->
        <div class="product-grid" id="productGrid">
            @foreach (var item in Model)
            {
                <div class="product-item" data-name="@item.ProductName" data-tags="@string.Join(",", item.Tags.Select(t => t.Content))">
                    <a href="@Url.Action("Details", "Product", new { id = item.Id })">
                        <img style="width:100%; height:150px; object-fit: cover;" src="@Url.Content(string.IsNullOrEmpty(item.Image) ? "/images/NoImage.png" : "/images/" + item.Image)" alt="@item.ProductName">
                    </a>
                    <div class="product-info">
                        <p><strong>Product Name:</strong> @item.ProductName</p>
                        <p><strong>Price:</strong> @item.Price €</p>
                        <p>
                            <strong>Description:</strong>
                            @if (item.Description != null)
                            {
                                @Html.Raw(item.Description.Substring(0, Math.Min(15, item.Description.Length)) + "...")
                            }
                            else
                            {
                                <span>No description available</span>
                            }
                        </p>
                        <p>
                            <strong>Tags:</strong>
                            @if (item.Tags != null && item.Tags.Count > 0)
                            {
                                @foreach (var tag in item.Tags.Take(3))
                                {
                                    <span class="tag">@tag.Content</span>
                                }
                            }
                            else
                            {
                                <span>No tags</span>
                            }
                        </p>
                    </div>
                    
                        <div class="product-actions">
                            <form asp-action="Delete" asp-controller="Product" asp-route-id="@item.Id" method="post" onsubmit="return confirm('Are you sure you want to delete this product?');">
                                <button type="submit" class="btn btn-circle btn-burgundy">
                                    <i class="bi bi-trash"></i>
                                </button>
                            </form>
                        </div>
                    
                </div>
            }
        </div>
    }
</div>

<style>
    .container {
        margin-top: 30px; /* Adds 30px of space above the container */
    }
    /* Styling for Add button */
    .btn-add {
        background-color: #800020;
        color: white;
        border: 2px solid transparent;
        width: 60px;
        height: 60px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: all 0.3s ease;
        text-decoration: none;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

        .btn-add:hover, .btn-add:focus {
            background-color: #fff;
            color: #800020;
            border-color: #800020;
            transform: scale(1.1);
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        .btn-add i {
            font-size: 2rem; /* Increase the size of the icon to make it more prominent */
            vertical-align: middle;
            line-height: 0;
        }
        .btn-add:active {
            transform: scale(1.05);
            box-shadow: 0 3px 6px rgba(0, 0, 0, 0.15);
        }

    /* Styles for product grid and items */
    .product-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));
        grid-gap: 20px;
    }

    .product-item {
        display: flex;
        flex-direction: column;
        border: 1px solid #ddd;
        border-radius: 5px;
        overflow: hidden;
        transition: transform 0.3s;
    }

        .product-item:hover {
            transform: scale(1.05);
        }

    .product-image {
        width: 100%;
        height: auto;
        object-fit: cover;
        transition: transform 0.3s ease;
    }

    .product-info {
        padding: 10px;
    }

    .tag {
        display: inline-block;
        background-color: #e0e0e0;
        color: #333;
        padding: 2px 5px;
        border-radius: 3px;
        margin: 2px;
    }

    .input-group-text {
        background-color: #800020;
        color: white;
    }
</style>

@section Scripts {
    <script>
        function searchFunction() {
            var input, filter, grid, items, item, i, txtValue;
            input = document.getElementById("searchInput");
            filter = input.value.toLowerCase();
            grid = document.getElementById("productGrid");
            items = grid.getElementsByClassName("product-item");

            for (i = 0; i < items.length; i++) {
                item = items[i];
                txtValue = item.textContent || item.innerText;
                if (txtValue.toLowerCase().indexOf(filter) > -1) {
                    item.style.display = "";
                } else {
                    item.style.display = "none";
                }
            }
        }
    </script>
}
